{"ast":null,"code":"import _slicedToArray from \"D:/vsCode/React/React Hooks/18_useLocalStorage hook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport function useLocalStorage(key, initialValue) {\n  _s();\n  var _useState = useState(function () {\n      try {\n        var item = window.localStorage.getItem(key);\n        return item ? JSON.parse(item) : initialValue;\n      } catch (error) {\n        console.error(\"Error retrieving data from local storage:\", error);\n        return initialValue;\n      }\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    storedValue = _useState2[0],\n    setStoredValue = _useState2[1];\n  var setValue = function setValue(value) {\n    try {\n      var valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(\"Error storing data in local storage:\", error);\n    }\n  };\n  return [storedValue, setValue];\n}\n_s(useLocalStorage, \"FRj7sQKTOUoubypfdWDXb0FgqMg=\");","map":{"version":3,"names":["useState","useLocalStorage","key","initialValue","_s","_useState","item","window","localStorage","getItem","JSON","parse","error","console","_useState2","_slicedToArray","storedValue","setStoredValue","setValue","value","valueToStore","Function","setItem","stringify"],"sources":["D:/vsCode/React/React Hooks/18_useLocalStorage hook/src/useLocalStorage.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport function useLocalStorage(key, initialValue) {\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      const item = window.localStorage.getItem(key);\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      console.error(\"Error retrieving data from local storage:\", error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  const setValue = (value) => {\r\n    try {\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      setStoredValue(valueToStore);\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      console.error(\"Error storing data in local storage:\", error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAO,SAASC,eAAeA,CAACC,GAAG,EAAEC,YAAY,EAAE;EAAAC,EAAA;EACjD,IAAAC,SAAA,GAAsCL,QAAQ,CAAC,YAAM;MACnD,IAAI;QACF,IAAMM,IAAI,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAACP,GAAG,CAAC;QAC7C,OAAOI,IAAI,GAAGI,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC,GAAGH,YAAY;MAC/C,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;QACjE,OAAOT,YAAY;MACrB;IACF,CAAC,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAV,SAAA;IARKW,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAUlC,IAAMI,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,KAAK,EAAK;IAC1B,IAAI;MACF,IAAMC,YAAY,GAChBD,KAAK,YAAYE,QAAQ,GAAGF,KAAK,CAACH,WAAW,CAAC,GAAGG,KAAK;MACxDF,cAAc,CAACG,YAAY,CAAC;MAC5Bb,MAAM,CAACC,YAAY,CAACc,OAAO,CAACpB,GAAG,EAAEQ,IAAI,CAACa,SAAS,CAACH,YAAY,CAAC,CAAC;IAChE,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC9D;EACF,CAAC;EAED,OAAO,CAACI,WAAW,EAAEE,QAAQ,CAAC;AAChC;AAACd,EAAA,CAvBeH,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}